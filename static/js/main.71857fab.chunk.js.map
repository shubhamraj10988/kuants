{"version":3,"sources":["components/Dropdown.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","array","useState","search","setSearch","show","setShow","className","onSubmit","e","preventDefault","alert","value","i","length","onFocus","onChange","target","type","placeholder","map","item","index","property","onClick","Name","Age","Gender","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAEaA,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAoBA,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAf,SACI,uBAAMC,SArBD,SAACC,GAEd,GADAA,EAAEC,iBACa,KAAXP,EACA,OAAOQ,MAAM,kBAGjB,IADA,IAAIC,EACKC,EAAI,EAAGA,EAAIZ,EAAMa,OAAQD,IAC1BZ,EAAMY,GAAGV,KACTS,EAAQX,EAAMY,GAAGV,IAGrBS,EACAR,EAAUQ,GAEVD,MAAM,cAOF,UACI,uBAEII,QAAS,WACLT,GAAQ,IAEZM,MAAOT,EACPa,SAAU,SAAAP,GAAC,OAAIL,EAAUK,EAAEQ,OAAOL,QAClCM,KAAM,OACNC,YAAY,gDACZZ,UAAU,UAEd,wBAAQA,UAAU,SACdW,KAAM,SADV,4BAOR,8BACKb,GACGJ,EAAMmB,KAAI,SAACC,EAAMC,GAAW,IAAD,WAEdC,GACL,MAAM,CAAN,EAAO,mBAEHhB,UAAU,OACViB,QAAS,WACLpB,EAAUiB,EAAKE,KAJhB,SAMLA,GALOD,KAFb,IAAK,IAAIC,KAAYF,EAAM,CAAC,IAAD,IAAlBE,GAAkB,4CChD7CtB,EAAQ,CACZ,CACEwB,KAAM,WAER,CACEC,IAAK,MAEP,CACEC,OAAQ,SAWGC,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,CAAUN,MAAOA,OCJR4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.71857fab.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const Dropdown = ({ array }) => {\r\n    const [search, setSearch] = useState(\"\")\r\n    const [show, setShow] = useState(false)\r\n\r\n    const getValue = (e) => {\r\n        e.preventDefault()\r\n        if (search === \"\") {\r\n            return alert(\"enter key name\")\r\n        }\r\n        let value;\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (array[i][search]) {\r\n                value = array[i][search]\r\n            }\r\n        }\r\n        if (value) {\r\n            setSearch(value)\r\n        } else {\r\n            alert(\"Not Found\");\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Main\">\r\n            <div className=\"Content\">\r\n                <form onSubmit={getValue}>\r\n                    <input\r\n\r\n                        onFocus={() => {\r\n                            setShow(true)\r\n                        }}\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                        type={\"text\"}\r\n                        placeholder=\"Type Name or Age or Gender it will give value\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"button\"\r\n                        type={\"submit\"}\r\n                    >\r\n                        Get Value\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                {show &&\r\n                    array.map((item, index) => {\r\n\r\n                        for (let property in item) {\r\n                            return <p\r\n                                key={index}\r\n                                className=\"keys\"\r\n                                onClick={() => {\r\n                                    setSearch(item[property])\r\n                                }}\r\n                            >{property}</p>\r\n                        }\r\n\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { Dropdown } from './components/Dropdown';\nconst array = [\n  {\n    Name: \"shubham\"\n  },\n  {\n    Age: \"22\"\n  },\n  {\n    Gender: \"Male\"\n  }\n]\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dropdown array={array} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}